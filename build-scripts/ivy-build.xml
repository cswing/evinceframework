
<project name="ivy-build" xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<property name="ivy.install.version" value="2.2.0" />

	<property name="ivy.jar.dir" value="${user.home}/.ivy2/jars" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<property name="ivy.file" value="${project.dir}/ivy.xml" />
	<property name="lib.dir" value="${project.dir}/lib" />
	
	<property name="ivy.module" value="${ant.project.name}" />
	<property name="ivy.revision" value="${version}" />
	<property name="ivy.local.default.root" value="${local.repo.dir}"/>
	<property name="ivy.report.todir" value="${report.dir}/dependencies" />

	<mkdir dir="${user.home}/.ant/properties"/>
	<property file="${user.home}/.ant/properties/repository.properties"/>

	<target name="download-ivy" unless="skip.ivy">
		<mkdir dir="${ivy.jar.dir}"/>    
		<get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 	
					dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="init-ivy" depends="download-ivy" unless="skip.ivy">
    <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar"/>
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
		<ivy:settings file="${common.scripts.dir}/ivy-settings.xml" />
	</target>
	
	<!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="resolve" depends="init-ivy" unless="skip.ivy" description="--> resolve and retrieve dependencies with ivy">
        <mkdir dir="${lib.dir}"/> <!-- not usually necessary, ivy creates the directory IF there are dependencies -->    			

    	<!-- the call to resolve is not mandatory, retrieve makes an implicit call if we don't -->
    	<ivy:resolve file="${ivy.file}"/>
    	<ivy:retrieve conf="development" pattern="${lib.dir}/[artifact](-[classifier]).[ext]" />
    </target>
    
    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" unless="skip.ivy" description="--> generates a report of dependencies">
    	<mkdir dir="${ivy.report.todir}"/>
        <ivy:report todir="${ivy.report.todir}" />
    </target>

	<!-- ================================= 
          target: publish              
         ================================= -->
	<target name="publish" depends="init-ivy" unless="skip.ivy">
		<ivy:publish resolver="internal-repository" 
				pubrevision="${version}" 
				srcivypattern="${ivy.file}" 				
				artifactspattern="${dist.repo}/[artifact]-[version].[ext]" >
		   <artifacts pattern="${dist.dir}/[artifact].[ext]" />
		</ivy:publish>
	</target>

	<!-- ================================= 
          target: publish-local              
         ================================= -->
	<target name="publish-local" depends="local-version" unless="skip.ivy">
		<ivy:publish artifactspattern="${dist.dir}/[artifact]-[revision].[ext]" 
						resolver="integration-repository"
						pubrevision="${version}"
						pubdate="${start.timestamp}"
						status="integration"
						forcedeliver="true"
		/>
		<echo message="project ${ant.project.name} published locally with version ${version}" />
	</target>

	<target name="local-version" unless="skip.ivy">
        <property name="ivy.new.revision" value="${module.version.target}-local-${start.timestamp}"/>
    </target>

	<!-- ================================= 
          target: clean-local              
         ================================= -->
	<target name="clean-local" depends="init-ivy" description="--> cleans the local repository for the current module">
		<ivy:info file="${ivy.file}" />
		<delete dir="${ivy.local.default.root}/${ivy.organisation}/${ivy.module}"/>
	</target>
	
	<!-- ================================= 
	          target: clean-local-cache              
	         ================================= -->
	<target name="clean-ivy-cache" description="--> cleans the local ivy-cache">			
		<delete dir="${ivy.cache.dir}"/>
		<mkdir dir="${ivy.cache.dir}"/>
	</target>

</project>
