<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
                           	
	<bean id="evf.membership.securityMessageSource" 
		class="com.evinceframework.membership.SecurityMessageSource" />
		
	<bean id="evf.membership.securityMessageAccessor" 
		class="org.springframework.context.support.MessageSourceAccessor">
		<constructor-arg ref="evf.membership.securityMessageSource" />
	</bean>
		
    <bean id="evf.membership.configuration"
        class="com.evinceframework.membership.Configuration"
        p:attemptsBeforeAccountLockedOut="${evf.membership.attemptsBeforeAccountLockedOut}"
        p:lockoutDuration="${evf.membership.lockoutDuration}"
        p:accountExpirationDuration="${evf.membership.accountExpirationDuration}"
        p:rolePrefix="${evf.membership.rolePrefix}"
        />
    
    <bean id="evf.membership.user" lazy-init="true" scope="prototype"
        p:configuration-ref="evf.membership.configuration"/>
    
    <bean id="evf.membership.role" lazy-init="true" scope="prototype"
        p:configuration-ref="evf.membership.configuration"/>
        
    <bean id="evf.membership.authenticationQuery"
        class="com.evinceframework.membership.authentication.UserQuery" />
    
    <util:set id="evf.membership.authenticationObservers">
        <bean id="evf.membership.authentication.logger"
        	class="com.evinceframework.membership.authentication.AuthenticationLogger"/>
    	<bean id="evf.membership.authentication.updater"
        	class="com.evinceframework.membership.authentication.UserUpdater"
        	p:configuration-ref="evf.membership.configuration" />
    </util:set>
    
    <bean id="evf.membership.authenticationProvider" 
       	class="com.evinceframework.membership.authentication.AuthenticationProviderImpl"
       	p:query-ref="evf.membership.authenticationQuery"
       	p:observers-ref="evf.membership.authenticationObservers"
       	p:messageSource-ref="evf.membership.securityMessageAccessor" />
    
    <!-- anonymous roles -->
    <bean id="evf.membership.anonymousRole.anonymous"
    		class="org.springframework.security.core.authority.SimpleGrantedAuthority">
		<constructor-arg value="${evf.membership.anonymousRole}" />
    </bean>
   	<bean id="evf.membership.anonymousRole.standardAuthentication"
   			class="org.springframework.security.core.authority.SimpleGrantedAuthority">
   		<constructor-arg value="ROLE_evf.membership.standardAuthentication" />
   	</bean>
   	<bean id="evf.membership.anonymousRole.rememberMe"
   			class="org.springframework.security.core.authority.SimpleGrantedAuthority">
   		<constructor-arg value="ROLE_evf.membership.rememberMe" />
   	</bean>
   	<bean id="evf.membership.anonymousRole.register"
   			class="org.springframework.security.core.authority.SimpleGrantedAuthority">
   		<constructor-arg value="ROLE_evf.membership.register" />
   	</bean>
   	<bean id="evf.membership.anonymousRole.resetPassword"
   			class="org.springframework.security.core.authority.SimpleGrantedAuthority">
   		<constructor-arg value="ROLE_evf.membership.resetPassword" />
   	</bean>
   	
   	<!-- Voters -->
   	<bean id="evf.membership.security.authenticatedVoter"
   		class="org.springframework.security.access.vote.AuthenticatedVoter" />

	<bean id="evf.membership.security.roleVoter"
   		class="org.springframework.security.access.vote.RoleVoter" 
   		p:rolePrefix="${evf.membership.rolePrefix}"/>
   	
   	<bean id="evf.membership.security.accessDecisionManager"
   			class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<ref bean="evf.membership.security.roleVoter" />
				<ref bean="evf.membership.security.authenticatedVoter" />
			</list>
		</property>
	</bean>
	
</beans>